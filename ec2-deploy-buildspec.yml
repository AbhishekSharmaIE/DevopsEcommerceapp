version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo "Installing dependencies..."
      - python -m pip install --upgrade pip
      - echo "Unzipping application package..."
      - unzip -o ecommerce-app.zip
      - echo "Copying requirements.txt from source..."
      - cp app/requirements.txt .
      - echo "Copying requirements.txt to deployment directory..."
      - cp requirements.txt /tmp/deploy/
      - cd /tmp/deploy
      - pip install -r requirements.txt

  pre_build:
    commands:
      - echo "Preparing for deployment..."
      - echo "Downloading SSH key..."
      - aws s3 cp s3://ecommerce-app-pipeline-artifacts/ecommerce-app-key-eu.pem .
      - chmod 400 ecommerce-app-key-eu.pem
      - echo "Unzipping application package..."
      - unzip -o ecommerce-app.zip -d /tmp/deploy
      - echo "Contents of deployment package:"
      - ls -la /tmp/deploy

  build:
    commands:
      - echo "Starting deployment..."
      - echo "Current directory $(pwd)"
      - echo "Listing files"
      - ls -la
      - echo "Checking key file"
      - ls -la ecommerce-app-key-eu.pem
      - echo "Testing SSH connection"
      - ssh -o StrictHostKeyChecking=no -i ecommerce-app-key-eu.pem -v ec2-user@ec2-34-243-69-123.eu-west-1.compute.amazonaws.com "echo 'SSH connection test'"
      - echo "Creating target directory on EC2"
      - ssh -o StrictHostKeyChecking=no -i ecommerce-app-key-eu.pem ec2-user@ec2-34-243-69-123.eu-west-1.compute.amazonaws.com "sudo mkdir -p /var/www/html/ecommerce && sudo chown ec2-user:ec2-user /var/www/html/ecommerce"
      - echo "Copying application files to EC2"
      - scp -o StrictHostKeyChecking=no -i ecommerce-app-key-eu.pem -r app/* ec2-user@ec2-34-243-69-123.eu-west-1.compute.amazonaws.com:/var/www/html/ecommerce/
      - echo "Restarting application"
      - ssh -o StrictHostKeyChecking=no -i ecommerce-app-key-eu.pem ec2-user@ec2-34-243-69-123.eu-west-1.compute.amazonaws.com "cd /var/www/html/ecommerce && sudo systemctl restart ecommerce-app"

  post_build:
    commands:
      - echo "Deployment completed successfully"

artifacts:
  files:
    - '**/*'
  name: DeployArtifact 