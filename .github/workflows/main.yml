name: Ecommerce App CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  EC2_HOST: ec2-52-214-107-96.eu-west-1.compute.amazonaws.com
  EC2_USER: ubuntu

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pylint
        
    - name: Run tests
      run: |
        python -m pytest tests/
        
    - name: Run linting
      run: |
        pylint app/ --output-format=text > pylint_report.txt || true

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build application
      run: |
        python -m compileall app/
        mkdir -p deploy/app
        cp -r app/* deploy/app/
        cp requirements.txt deploy/
        cp Procfile deploy/
        cp nginx.conf deploy/
        cp gunicorn.service deploy/
        cp gunicorn.socket deploy/
        cp deploy.sh deploy/
        cp -r scripts deploy/
        chmod +x deploy/scripts/*.sh
        chmod +x deploy/deploy.sh
        cp appspec.yml deploy/
        cd deploy
        zip -r ../app.zip . -x "*.git*" "*.pyc" "*.pyo" "*.pyd" "*.so" "*.egg" "*.egg-info" "__pycache__/*" "*.swp" "*.swo" "*.bak" "*.tmp" "*.log" "*.pid" "*.pid.lock" "*.lock" "*.DS_Store" "*.idea/*" "*.vscode/*" "*.env" "*.venv" "venv/*" "node_modules/*"
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: app.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: .
        
    - name: Setup SSH Key
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/ecommerce-app-key-eu.pem
        chmod 600 ~/.ssh/ecommerce-app-key-eu.pem
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/deploy_key
        chmod 600 /tmp/deploy_key
        
    - name: Deploy to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_USER }}
        key: /tmp/deploy_key
        source: "app.zip"
        target: "/tmp"
        
    - name: Execute deployment script
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_USER }}
        key: /tmp/deploy_key
        script: |
          cd /tmp
          unzip -o app.zip -d /var/www/html/ecommerce
          cd /var/www/html/ecommerce
          chmod +x deploy.sh
          ./deploy.sh 